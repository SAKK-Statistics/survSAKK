devtools::document()
pkgdown::build_site_github_pages()
# Plot 4
surv.plot(fit.lung.arm.m,
# Cusomization of the survival plot
main = "Kaplan-Meier plot",
legend.name = c("Male", "Female"),
legend.title = "Sex",
xlab.cex = 1.2,
ylab.cex = 1.2,
axis.cex = 0.8,
censoring.cex = 1,
legend.title.cex = 1.2,
# Customization of the risktable
risktable.name.position = -7,
risktable.cex = 0.7)
# Creating 4 sub-plot
par(mfrow=c(2,2))
# Plot 1
surv.plot(fit.lung.d)
# Plot 2
surv.plot(fit.lung.arm.m,
time.unit = "month")
# Plot 3
surv.plot(fit.lung.arm.y,
col = c("cadetblue2", "cadetblue"),
time.unit = "year",
stat = "coxph")
# Plot 4
surv.plot(fit.lung.arm.m,
# Cusomization of the survival plot
main = "Kaplan-Meier plot",
legend.name = c("Male", "Female"),
legend.title = "Sex",
xlab.cex = 1.2,
ylab.cex = 1.2,
axis.cex = 0.8,
censoring.cex = 1,
legend.title.cex = 1.2,
# Customization of the risktable
risktable.name.position = -7,
risktable.cex = 0.7)
# reset the plotting area
par(mfrow=c(1,1))
# Creating 4 sub-plot
par(mfrow=c(2,2))
# Plot 1
surv.plot(fit.lung.d)
# Plot 2
surv.plot(fit.lung.arm.m,
time.unit = "month")
# Plot 3
surv.plot(fit.lung.arm.y,
col = c("cadetblue2", "cadetblue"),
time.unit = "year",
stat = "coxph")
# Plot 4
surv.plot(fit.lung.arm.m,
# Cusomization of the survival plot
main = "Kaplan-Meier plot",
legend.name = c("Male", "Female"),
legend.title = "Sex",
xlab.cex = 1.2,
ylab.cex = 1.2,
axis.cex = 0.8,
censoring.cex = 1,
legend.title.cex = 1.2,
# Customization of the risktable
risktable.name.position = -9,
risktable.cex = 0.7)
# reset the plotting area
par(mfrow=c(1,1))
# Plot 4
surv.plot(fit.lung.arm.m,
# Cusomization of the survival plot
main = "Kaplan-Meier plot",
legend.name = c("Male", "Female"),
legend.title = "Sex",
xlab.cex = 1.2,
ylab.cex = 1.2,
axis.cex = 0.8,
censoring.cex = 1,
legend.title.cex = 1.2,
# Customization of the risktable
risktable.name.position = -9,
risktable.title.position = -9,
risktable.cex = 0.7)
# Creating 4 sub-plot
par(mfrow=c(2,2))
# Plot 1
surv.plot(fit.lung.d)
# Plot 2
surv.plot(fit.lung.arm.m,
time.unit = "month")
# Plot 3
surv.plot(fit.lung.arm.y,
col = c("cadetblue2", "cadetblue"),
time.unit = "year",
stat = "coxph")
# Plot 4
surv.plot(fit.lung.arm.m,
# Cusomization of the survival plot
main = "Kaplan-Meier plot",
legend.name = c("Male", "Female"),
legend.title = "Sex",
xlab.cex = 1.2,
ylab.cex = 1.2,
axis.cex = 0.8,
censoring.cex = 1,
legend.title.cex = 1.2,
# Customization of the risktable
risktable.name.position = -9,
risktable.title.position = -9,
risktable.cex = 0.7)
# reset the plotting area
par(mfrow=c(1,1))
pkgdown::build_site_github_pages()
getwd()
devtools::document()
pkgdown::build_site_github_pages()
devtools::document()
devtools::document()
devtools::check()
R CMD check
pkgdown::build_site_github_pages()
devtools::check(remote = TRUE, manual = TRUE)
devtools::check()
?devtools::check_win_devel()
devtools::submit_cran()
devtools::document()
pkgdown::build_site_github_pages()
devtools::document()
devtools::check()
devtools::test()
devtools::submit_cran()
use_cran_comments()
usethis::use_cran_comments()
urlchecker::url_check()
devtools::build_readme()
devtools::check(remote = TRUE, manual = TRUE)
devtools::document()
pkgdown::build_site_github_pages()
devtools::check(remote = TRUE, manual = TRUE)
devtools::submit_cran()
R CMD check --as-cran
devtools::check()
urlchecker::url_check()
devtools::build_readme()
devtools::check(remote = TRUE, manual = TRUE)
devtools::check(remote = TRUE, manual = TRUE)
devtools::check(remote = TRUE, manual = TRUE)
devtools::document()
pkgdown::build_site_github_pages()
devtools::check(remote = TRUE, manual = TRUE)
devtools::check()
devtools::check(remote = TRUE, manual = TRUE)
devtools::submit_cran()
devtools::check(remote = TRUE, manual = TRUE)
# Load Data:
esophagus <- read.csv("L:/Mgmt/Ops/Stat/Programming/Macros/R/R_Package_SAKK/Functions/KaplanMeierPlot/Publication/data/esophagus.csv")
View(esophagus)
usethis::use_data(esophagus)
colnames(esophagus)
View(esophagus)
esophagus$OS.event
esophagus$hist
esophagus$arm
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::build_site()
detach(survSAKK)
detach("survSAKK")
devtools::build_site()
?`survSAKK-package`
library(survSAKK)
dd <- esophagus
?urv.plot()
?surv.plot()
devtools::build()
survSAKK::surv.plot()
data(*"esophagus")
data("esophagus")
?esophagus
??esophagus
help("esophagus")
help("data")
help("survSAKK")
data(package = "survSAKK")
detach("package:survSAKK", unload = TRUE)
data(survSAKK)
detach("package:survSAKK", unload = TRUE)
survSAKK::esophagus
?esophagus
devtools::document()
?esophagus
esophagus
dd <- esophagus
View(dd)
?esophagus
detach("package:survSAKK", unload = TRUE)
devtools::document()
?eophagus
?esophagus
devtools::document()
?esophagus
?on.exit
par(no.readonly = TRUE)
# Load required libraries
library(survSAKK)
library(survival)
# Load lung data
lung <- survival::lung
# Compute survival time in months and years
lung$time.m <- lung$time/365.25*12
lung$time.y <- lung$time/365.25
# Create survival objects
fit.lung.d <- survfit(Surv(time, status) ~ 1, data = lung)
fit.lung.m <- survfit(Surv(time.m, status) ~ 1, data = lung)
fit.lung.arm.m <- survfit(Surv(time.m, status) ~ sex, data = lung)
fit.lung.arm.y <- survfit(Surv(time.y, status) ~ sex, data = lung)
# VSO:
on.exit(par(no.readonly = TRUE))
devtools::document()
par_settings_user <- par(no.readonly = TRUE)
par_settings_user
on.exit(par(par_settings_user))
# Load required libraries
library(survSAKK)
library(survival)
# Load lung data
lung <- survival::lung
# Compute survival time in months and years
lung$time.m <- lung$time/365.25*12
lung$time.y <- lung$time/365.25
# Create survival objects
fit.lung.d <- survfit(Surv(time, status) ~ 1, data = lung)
fit.lung.m <- survfit(Surv(time.m, status) ~ 1, data = lung)
fit.lung.arm.m <- survfit(Surv(time.m, status) ~ sex, data = lung)
fit.lung.arm.y <- survfit(Surv(time.y, status) ~ sex, data = lung)
surv.plot(fit.lung.arm.m,
legend.name = c("Male", "Female"),
time.unit = "month",
segment.timepoint = 12
)
surv.plot(fit.lung.arm.m,
legend.name = c("Male", "Female"),
time.unit = "month",
segment.timepoint = c(12,18,24)
)
surv.plot(fit.lung.arm.m,
legend.name = c("Male", "Female"),
time.unit = "month",
segment.timepoint = c(12,18,24),
segment.main = "Text"
)
surv.plot(fit.lung.arm.m,
legend.name = c("Male", "Female"),
time.unit = "month",
segment.timepoint = c(12),
segment.main = "Text"
)
surv.plot(fit.lung.arm.m,
legend.name = c("Male", "Female"),
time.unit = "month",
segment.timepoint = c(12,14),
segment.main = "Text"
)
surv.plot(fit.lung.arm.m,
legend.name = c("Male", "Female"),
time.unit = "month",
segment.timepoint = c(12,14)
)
surv.plot(fit.lung.arm.m,
legend.name = c("Male", "Female"),
time.unit = "month",
segment.timepoint = c(12,14),
segment.main = "Text"
)
surv.plot(fit.lung.arm.m,
legend.name = c("Male", "Female"),
time.unit = "month",
segment.quantile = c(0.5)
)
surv.plot(fit.lung.arm.m,
legend.name = c("Male", "Female"),
time.unit = "month",
segment.quantile = c(0.5, 0.75)
)
surv.plot(fit.lung.arm.m,
legend.name = c("Male", "Female"),
time.unit = "month",
segment.quantile = c(0.5, 0.75),
segment.annotation.col = "black"
)
surv.plot(fit.lung.arm.m,
legend.name = c("Male", "Female"),
time.unit = "month",
segment.quantile = c(0.5, 0.75),
segment.annotation.col = "black"
)
)?text
)?text()
??text
?text
surv.plot(fit.lung.arm.m,
legend.name = c("Male", "Female"),
time.unit = "month",
segment.quantile = c(0.5, 0.75),
segment.annotation.col = "black"
)
surv.plot(fit.lung.arm.m,
legend.name = c("Male", "Female"),
time.unit = "month",
segment.quantile = c(0.5, 0.75),
segment.annotation.col = "black"
)
devtools::document()
surv.plot(fit = survObject, segment.quantile = c(0.25,0.5,0.75))
survObject <- survfit(Surv(time, status) ~ sex, data = lung)
surv.plot(fit = survObject, segment.quantile = c(0.25,0.5,0.75))
surv.plot(fit = survObject, segment.quantile = c(0.25,0.5,0.75), segment.col = "black")
surv.plot(fit = survObject, segment.quantile = c(0.25,0.5,0.75), segment.annotation.col = "black")
surv.plot(fit = survfit(Surv(time, status) ~ 1, data = lung),
segment.quantile = 0.50,
segment.timepoint = 360,
segment.type = 1)
surv.plot(fit = survfit(Surv(time, status) ~ 1, data = lung),
segment.quantile = 0.50,
segment.timepoint = 360,
segment.type = 1)
surv.plot(fit = survfit(Surv(time, status) ~ 1, data = lung),
segment.quantile = 0.50,
segment.timepoint = 360)
surv.plot(fit.lung.arm.m,
legend.name = c("Male", "Female"),
time.unit = "month",
segment.quantile = c(0.5, 0.75),
segment.annotation.col = "black"
)
?surv.plot()
?survival
library(survail)
library(survival)
?`survival-deprecated`
?survfit
?survSAKK
survSAKK::esophagus
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
pkgdown::build_site_github_pages()
?survSAKK
?surv.plot()
devtool::document()
devtools::document()
citations(survSAKK)
citation(survSAKK)
citation("survSAKK")
help(SurvSAKK)
help("SurvSAKK")
?"SurvSAKK"
?survSAKK
?survSAKK
pkgdown::build_site_github_pages()
devtools::document()
devtools::submit_cran()
# Clear environment
rm(list=ls())
# Load required libraries
library(tidyverse)
library(haven)
# Initialisaiton
setwd("L:/Mgmt/Ops/Stat/Programming/Macros/R/R_Package_SAKK/Functions/KaplanMeierPlot/data")
# Data of SAKK 75/08
SAKK7508 <- file.path("L:/Trials/Terminated_trials/SAKK_75_08/_Files_after_termination/Statistics/2_final_analysis/data/derived/20190708")
# Load derived SAS data
data_path <- SAKK7508
table_names <- tools::file_path_sans_ext(list.files(data_path))
all_tables <- lapply(table_names, function(table_name) {
read_sas(file.path(data_path, paste0(table_name, ".sas7bdat")))
})
# Replace empty strings with NA for character variables
all_tables <- lapply(all_tables, function(table) {
table[sapply(table, is.character) & table == ""] <- NA
return(table)
})
# Assign individual tables to their names
names(all_tables) <- table_names
list2env(all_tables, envir = .GlobalEnv)
# Clean up environment
rm(table_names, all_tables)
dd_patinfo <- pat_info %>%
select(., upn, pat_sex, arm, itt) %>%
filter(., itt == 1) %>%
rename(ID = upn, sex = pat_sex, arm = arm) %>%
mutate(arm = factor(arm, levels = c ("A","B"), labels = c("Treatment","Control")))
dd_OS <- os %>%
select(., upn, os_years, osflg, e_histologic_type) %>%
rename(ID = upn, OS.time = os_years, OS.event = osflg, hist = e_histologic_type) %>%
mutate(hist = factor(hist, levels = c(1,2), labels = c("Adenocarcinoma","Squamous cell carcinoma")))
dd_PFS <- pfs %>%
select(., upn, pfsyears, pfs) %>%
rename(ID = upn, PFS.time = pfsyears, PFS.event = pfs)
esophagus <- left_join(dd_patinfo, dd_OS, by = "ID")
esophagus <- left_join(esophagus, dd_PFS, by = "ID")
view(esophagus)
dd_patinfo <- pat_info %>%
select(., upn, arm, itt) %>%
filter(., itt == 1) %>%
rename(ID = upn, arm = arm) %>%
mutate(arm = factor(arm, levels = c ("A","B"), labels = c("Treatment","Control")))
dd_OS <- os %>%
select(., upn, os_years, osflg, e_histologic_type) %>%
rename(ID = upn, OS.time = os_years, OS.event = osflg, hist = e_histologic_type) %>%
mutate(hist = factor(hist, levels = c(1,2), labels = c("Adenocarcinoma","Squamous cell carcinoma")))
dd_PFS <- pfs %>%
select(., upn, pfsyears, pfs) %>%
rename(ID = upn, PFS.time = pfsyears, PFS.event = pfs)
esophagus <- left_join(dd_patinfo, dd_OS, by = "ID")
esophagus <- left_join(esophagus, dd_PFS, by = "ID")
# remove `itt` variable
esophagus <- esophagus %>% select(-c(ID,itt))
# Save the data as esophagus
write.csv(esophagus, file = "esophagus.csv", row.names = FALSE)
View(esophagus)
View(esophagus)
usethiss:use_data_raw("esophagus")
usethis:use_data_raw("esophagus")
library(usethis)
usethis::use_data_raw("esophagus")
view(esophagus)
usethis::use_data_raw("esophagus")
proj_get()
use_data("esophagus")
usethis::use_data("esophagus")
usethis::use_data("esophagus.csv")
library(readr)
esophagus <- read_csv("data/esophagus.csv")
View(esophagus)
usethis::use_data("esophagus")
usethis::use_data("esophagus")
usethis::use_data_raw("esophagus")
usethis::use_data()
devtools::document()
View(esophagus)
# Clear environment
rm(list=ls())
# Load required libraries
library(tidyverse)
library(haven)
# Initialisaiton
setwd("L:/Mgmt/Ops/Stat/Programming/Macros/R/R_Package_SAKK/Functions/KaplanMeierPlot/data")
# Data of SAKK 75/08
SAKK7508 <- file.path("L:/Trials/Terminated_trials/SAKK_75_08/_Files_after_termination/Statistics/2_final_analysis/data/derived/20190708")
# Load derived SAS data
data_path <- SAKK7508
table_names <- tools::file_path_sans_ext(list.files(data_path))
all_tables <- lapply(table_names, function(table_name) {
read_sas(file.path(data_path, paste0(table_name, ".sas7bdat")))
})
# Replace empty strings with NA for character variables
all_tables <- lapply(all_tables, function(table) {
table[sapply(table, is.character) & table == ""] <- NA
return(table)
})
# Assign individual tables to their names
names(all_tables) <- table_names
list2env(all_tables, envir = .GlobalEnv)
# Clean up environment
rm(table_names, all_tables)
dd_patinfo <- pat_info %>%
select(., upn, arm, itt) %>%
filter(., itt == 1) %>%
rename(ID = upn, arm = arm) %>%
mutate(arm = factor(arm, levels = c ("A","B"), labels = c("Treatment","Control")))
dd_OS <- os %>%
select(., upn, os_years, osflg, e_histologic_type) %>%
rename(ID = upn, OS.time = os_years, OS.event = osflg, hist = e_histologic_type) %>%
mutate(hist = factor(hist, levels = c(1,2), labels = c("Adenocarcinoma","Squamous cell carcinoma")))
dd_PFS <- pfs %>%
select(., upn, pfsyears, pfs) %>%
rename(ID = upn, PFS.time = pfsyears, PFS.event = pfs)
esophagus <- left_join(dd_patinfo, dd_OS, by = "ID")
esophagus <- left_join(esophagus, dd_PFS, by = "ID")
# remove `itt` variable
esophagus <- esophagus %>% select(-c(ID,itt))
# regroup dataset (pseudonymization)
set.seed(1234)
esophagus_group <- esophagus %Y%
mutate(group = sample(1:2), n(),replace = TRUE)
esophagus_group <- esophagus %>%
mutate(group = sample(1:2), n(),replace = TRUE)
sophagus %>%
group_by(arm)
esophagus %>%
group_by(arm)
esophagus_group <- esophagus %>%
group_by(arm)
View(esophagus_group)
esophagus <- esophagus %>%
group_by(hist)
View(esophagus)
View(esophagus)
esophagus_shuffeld <- esophagus[sample(nrow(esophagus)), ]
View(esophagus_shuffeld)
esophagus <- esophagus[sample(nrow(esophagus)), ]
# Save the data as esophagus
write.csv(esophagus, file = "esophagus.csv", row.names = FALSE)
