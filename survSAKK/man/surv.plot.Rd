% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/surv.plot.R
\name{surv.plot}
\alias{surv.plot}
\title{Publication Ready Kaplan-Meier Plot}
\usage{
surv.plot(
  fit,
  mark.censoring = TRUE,
  conf.int = fit$conf.int,
  conf.band = TRUE,
  conf.band.col = col,
  conf.band.alpha = 0.25,
  conf.type = "log-log",
  grid = FALSE,
  col = NULL,
  main = NULL,
  sub = NULL,
  xlab = "Time",
  ylab = "Estimates Survival Probability",
  cex.lab = 1,
  cex.axis = 0.75,
  bty = "l",
  lty = c("solid", "dotted", "dotted"),
  lwd = 1,
  xlim = seq(from = 0, to = ceiling(max(fit$time)) + ceiling(min(fit$time))),
  ylim = seq(from = 0, to = 1, by = 0.25),
  show.legend = TRUE,
  legend.position = "topright",
  legend.legend = NULL,
  legend.text.font = 1,
  legend.cex = 0.75,
  legend.title = NULL,
  legend.title.cex = 1,
  segment.type = 3,
  segment.timepoint = NULL,
  segment.quantile = NULL,
  segment.main = NULL,
  segment.annotation = "right",
  segment.col = "#666666",
  segment.annotation.col = col,
  segment.lty = "dashed",
  segment.lwd = 1,
  segment.cex = 0.75,
  segment.annotation.space = 0.03,
  segment.font = 1
)
}
\arguments{
\item{fit}{An object of class \code{survfit}, usually returned by the \code{survfit} function}

\item{mark.censoring}{Curves are marked at each censoring time if TRUE otherwise FALSE.}

\item{conf.int}{Specifies the coverage probability. (FALSE, TRUE using 95\% confidence intervals.  Alternatively, this can be a numeric value giving the desired confidence level.}

\item{conf.band}{Mapping the specified coverage probability}

\item{conf.band.col}{Can accept a single value for colour, or a vector of colour values to set colour(s)}

\item{conf.band.alpha}{Modify colour transparency for the confidence band}

\item{conf.type}{Specifies the transformation. Default: "log-log". Options ("log", "log-log", "plain", "logit", "arcsin")}

\item{grid}{gird A logical value for drawing Grid. (TRUE or FALSE)}

\item{col}{Can accept a single value for colour, or a vector of colour values to set colour(s)}

\item{main}{Title}

\item{sub}{Subtitle}

\item{xlab}{Label given to x-axis}

\item{ylab}{Label given to y-axis}

\item{cex.lab}{A numeric value specifying the size of the xlab and ylab}

\item{cex.axis}{A numeric value specifying the size of the axis size}

\item{bty}{The type of box to be drawn around the plot ("n","o","7","L","C","U")}

\item{lty}{A vector of string specifying line types for each curve (“blank”, “solid”, “dashed”, “dotted”, “dotdash”, “longdash”, “twodash”)}

\item{lwd}{A vector of numeric values for line widths.}

\item{xlim}{Set xlim based on the range, seq(starting value,  end value, number of increment of the sequence)}

\item{ylim}{Set ylim based on the range, seq(starting value,  end value, number of increment of the sequence)}

\item{show.legend}{Display legend}

\item{legend.position}{Position of the legend: c(x,y), "bottomright", "bottom", "bottomleft", "left", "topleft", "top", "topright", "right" and "center"}

\item{legend.legend}{A vector of string given to legend}

\item{legend.text.font}{An integer specifying the font style of the legend text; (1: normal, 2: bold, 3: italic, 4: bold and italic)}

\item{legend.cex}{Expansion factor for legend text}

\item{legend.title}{The title of the legend}

\item{legend.title.cex}{Expansion factor for legend title}

\item{segment.type}{A numeric value specifying the layout of the segment (1: Draws specified segment (full bandwidth), 2: Draws specified segment, 3: Drawing vertical and horizontal segment)}

\item{segment.timepoint}{A single value or a vector of fixed time points of segment(s)}

\item{segment.quantile}{A single value or a vector of fixed quantile of segment(s) at a fixed quantile (e.g. 0.5 corresponds to median)}

\item{segment.main}{Title of segment text}

\item{segment.annotation}{Position of the segment annotation: (c(x,y), "bottomleft", "left", "right", "none")}

\item{segment.col}{Can accept a single value for colour, or a vector of colour values to set colour(s)}

\item{segment.annotation.col}{Can accept a single value for colour, or a vector of colour values to set colour(s)}

\item{segment.lty}{A vector of string specifying line types for each curve (“blank”, “solid”, “dashed”, “dotted”, “dotdash”, “longdash”, “twodash”)}

\item{segment.lwd}{A vector of numeric values for line widths}

\item{segment.cex}{A numeric values specifying the size of the segment annotation size}

\item{segment.annotation.space}{Spacing between the text in unit of x-coordinates}

\item{segment.font}{A numeric value specifying the font face (1 = plain, 2 = bold, 3 = italic, 4 = bold-italic)}
}
\description{
Plot publication ready Kaplan-Meier plot using the results from \code{survival::survfit()}.
}
\examples{
#' Example
#'
#'lung <- survival::lung
#'lung$time_yr <- lung$time/365.25
#'lung$time_mt <- lung$time_yr*12
#'lung$sex <- factor(lung$sex,
#'                   levels = c(1,2),
#'                   labels = c("Male","Female"))
#'
#' # Survival Object with two arms
#'survobject1 <- survival::survfit(Surv(time_mt, status) ~ sex, data = lung)
#'survobject2 <- survival::survfit(Surv(time_yr, status) ~ sex, data = lung)
#'
#' # Survival Object with one arm
#'survobject3 <- survival::survfit(Surv(time_yr, status) ~ 1, data = lung)
#'survobject4 <- survival::survfit(Surv(time_mt, status) ~ 1, data = lung)
#'
#'
#'survSAKK::surv.plot(fit = survobject1)
#'
#'survSAKK::surv.plot(fit = survobject2, xlim = seq(0,3),
#'                    legend.legend = c("Female","Male"))
#'
#'survSAKK::surv.plot(fit = survobject3, xlim = seq(0,3))
#'
#'survSAKK::surv.plot(fit = survobject4)
#'
#'survSAKK::surv.plot(fit = survobject2, xlim = seq(0,3),
#'                    segment.type = 3,
#'                    segment.timepoint = 0.5,
#'                    segment.text.position = "left")
#'survSAKK::surv.plot(fit = survobject2, xlim = seq(0,3),
#'                    segment.type = 3,
#'                    segment.quantile = 0.5,
#'                    segment.text.position = "bottomleft")
#'
#'survSAKK::surv.plot(fit = survobject2, xlim = seq(0,3),
#'                    segment.type = 3,
#'                    segment.quantile = 0.25,
#'                    segment.text.position =c(0.35,0.4))
#'
#'survSAKK::surv.plot(fit = survobject2, xlim = seq(0,3),
#'                    col =c("pink","lightblue"),
#'                    segment.type = 3,
#'                    segment.quantile = 0.5,
#'                    segment.text.position = "none")
#'
#'survSAKK::surv.plot(fit = survobject2, xlim = seq(0,3),
#'                    segment.type = 3,
#'                    segment.timepoint = 0.5,
#'                    segment.text.position = "none")
#'
#'survSAKK::surv.plot(fit = survobject2,
#'                    col =c("purple","green"),
#'                    segment.type = 3,
#'                    segment.timepoint = 1.5,
#'                    segment.text.position = "right",
#'                    segment.col = c("black","grey"),
#'                    conf.band.col = c("red","yellow"))
}
